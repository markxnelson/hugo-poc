<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on WebLogic Kubernetes Operator</title>
    <link>/weblogic-kubernetes-operator/security/</link>
    <description>Recent content in Security on WebLogic Kubernetes Operator</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Feb 2019 17:34:48 -0500</lastBuildDate>
    
	<atom:link href="/weblogic-kubernetes-operator/security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Certificates</title>
      <link>/weblogic-kubernetes-operator/security/certificates/</link>
      <pubDate>Wed, 06 Mar 2019 21:14:18 -0500</pubDate>
      
      <guid>/weblogic-kubernetes-operator/security/certificates/</guid>
      <description>Reference  Configure the external REST interface SSL/TLS identity REST interface configuration settings Sample to create external certificate and key  Updating operator external certificate If the operator needs to update the external certificate and key currently being used or was installed without an external REST API SSL/TLS identity, the helm upgrade command is used to re-start the operator with the new or updated kubernetes tls secret that contains the desired certificate(s).</description>
    </item>
    
    <item>
      <title>Encryption</title>
      <link>/weblogic-kubernetes-operator/security/encryption/</link>
      <pubDate>Sat, 23 Feb 2019 17:36:29 -0500</pubDate>
      
      <guid>/weblogic-kubernetes-operator/security/encryption/</guid>
      <description>Reference  Encryption of values for WebLogic configuration overrides  Encryption of Kubernetes Secrets To protect your Kubernetes secret with encryption, see the Kubernetes documenation about encryption at rest for secret data and using a KMS provider for data encryption.
WebLogic Operator Introspector The credential for the WebLogic domain is kept in a kubernetes secret that follows the pattern &amp;lt;domainUID&amp;gt;-weblogic-credentials, where &amp;lt;domainUID&amp;gt; is the unique identifier of the domain, for example, domain1-weblogic-credentials.</description>
    </item>
    
    <item>
      <title>Service Accounts</title>
      <link>/weblogic-kubernetes-operator/security/service-accounts/</link>
      <pubDate>Sat, 23 Feb 2019 17:36:12 -0500</pubDate>
      
      <guid>/weblogic-kubernetes-operator/security/service-accounts/</guid>
      <description>TODO</description>
    </item>
    
    <item>
      <title>RBAC</title>
      <link>/weblogic-kubernetes-operator/security/rbac/</link>
      <pubDate>Sat, 23 Feb 2019 17:15:36 -0500</pubDate>
      
      <guid>/weblogic-kubernetes-operator/security/rbac/</guid>
      <description>The operator assumes that certain roles and role bindings are created on the Kubernetes cluster. The operator installation scripts create these, and the operator verifies that they are correct when the cluster starts up. This document lists the RBAC definitions that are created.
The general design goal is to provide the operator with the minimum amount of permissions that it requires, and to favor built-in roles over custom roles, where it make sense to do so.</description>
    </item>
    
    <item>
      <title>Secrets</title>
      <link>/weblogic-kubernetes-operator/security/secrets/</link>
      <pubDate>Sat, 23 Feb 2019 17:36:33 -0500</pubDate>
      
      <guid>/weblogic-kubernetes-operator/security/secrets/</guid>
      <description>Reference  WebLogic Domain Credentials Secret WebLogic Domain Image Pull Secret WebLogic Operator External REST Interface Secret WebLogic Operator Internal REST Interface Secret  WebLogic Domain Credentials Secret The credential for the WebLogic domain is kept in a kubernetes secret that follows the pattern &amp;lt;domainUID&amp;gt;-weblogic-credentials, where &amp;lt;domainUID&amp;gt; is the unique identifier of the domain, for example, mydomain-weblogic-credentials.
If the WebLogic domain will be started in domain1-ns and the &amp;lt;domainUID&amp;gt; is domain1, an example of creating a kubernetes generic secret is as follows:</description>
    </item>
    
  </channel>
</rss>